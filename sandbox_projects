######sandbox code that may not work


# Example data
#dt <- data.frame(
 # study = c("Sleep", "Sedentary", "LPA", "MVPA"),
#  study = c("Study 1", "Study 2", "Study 3", "Study 4"),
#  est = c(0.486, 1.003, 0.998, 0.861),  # Odds ratios
#  lower = c(0.229, 0.999, 0.994, 0.635), # Lower CI bound
#  upper = c(1.029, 1.007, 1.001, 1.167), # Upper CI bound
#  se = c(0.2, 0.1, 0.3, 0.1)  ,   # Standard error (optional, for sizing the plot)
#  pvalue = c(0.060, 0.100, 0.203, 0.334) # p-values (add this column)
#)


  #  dt[, c("Sleep", "Sedentary", "LPA", "MVPA")],  # Select relevant columns (study name, OR, CI bounds)

library(forestploter)
library(grid)

# Example data with odds ratios, CIs, and p-values
dt <- data.frame(
  study = c("Sleep", "Sedentary", "LPA", "MVPA"),
  est = c(0.486, 1.003, 0.998, 0.861),  # Odds ratios
  lower = c(0.229, 0.999, 0.994, 0.635), # Lower CI bound
  upper = c(1.029, 1.007, 1.001, 1.167) # Upper CI bound
#  se = c(0.2, 0.1, 0.3, 0.1)    # Standard error (optional, for sizing the plot points)
 # pvalue = c(0.05, 0.20, 0.03, 0.95) # p-values (add this column)
)

# Display the updated data frame
print(dt)

# NA to blank or NA will be transformed to carachter.
dt$se <- (log(dt$upper) - log(dt$est))/1.96

# Add a blank column for the forest plot to display CI.
# Adjust the column width with space, and increase the number of spaces below 
# to have a larger area to draw the CI. 
dt$` ` <- paste(rep(" ", 20), collapse = " ")

# Create a confidence interval column to display
dt$`HR (95% CI)` <- ifelse(is.na(dt$se), "",
                           sprintf("%.2f (%.2f to %.2f)",
                                   dt$est, dt$lower, dt$upper))
#`HR (95% CI)
# Display the updated data frame
print(dt)

dt$blank1 <- ""
dt$blank2 <- ""
dt$blank3 <- ""

dt_rearranged <- dt[, c("study", "blank1", "blank2", "blank3", "HR (95% CI)")]
# Remove column names for the blank columns by setting them to NA
names(dt_rearranged)[which(names(dt_rearranged) == "blank1")] <- "      "
names(dt_rearranged)[which(names(dt_rearranged) == "blank2")] <- "      "
names(dt_rearranged)[which(names(dt_rearranged) == "blank3")] <- "      "


# Create the forest plot for Odds Ratios
p <- forest(
  dt_rearranged,
   est = dt$est,                              # Point estimates (odds ratios)
  lower = dt$lower,                          # Lower bound of CI
  upper = dt$upper,                          # Upper bound of CI
  sizes = dt$se,                             # Standard error (for size of the plot points)
  ref_line = 1,                              # Reference line at OR = 1 (no effect)
  xlim = c(0, 1.3),                            # Set x-axis limits (ensure enough space for plot)
  ticks_at = c(0, 0.2, 0.4, 0.6, 0.8, 1.0, 1.2),                   # Set x-axis ticks
  arrow_lab = c("Placebo Better", "Treatment Better"), # Labels for the axes
  footnote = "Odds Ratio Plot with P-values",  # Optional footnote
  ci_column = c(3),                       # Specify the indices of the lower and upper CI columns (3 and 4)
  table = TRUE,                              # Ensure the table is included in the plot
  plot = TRUE,                                # Ensure the plot itself is generated
  table_header = c("study", "", "", "", "HR (95% CI)"),  # Set the column names to empty strings
  table_gpar = gpar(fontsize = 10,          # Adjust font size for the table
                    width = c(2, 5, 5, 5, 3))  # Set the column widths (wider for HR (95% CI) column)
)


# Print the plot
plot(p)

######################################
install.packages("forestploter")

library(grid)
library(forestploter)

# Read provided sample example data
dt <- read.csv(system.file("extdata", "example_data.csv", package = "forestploter"))

# Specify the file path (replace with your desired path)
output_path <- "C:/Users/no/no/Desktop/exported_data.csv"  # Windows
# output_path <- "/Users/YourUsername/Documents/example_data_exported.csv"   # macOS or Linux

# Save the data frame to a CSV file
write.csv(dt, file = output_path, row.names = FALSE)

# Confirmation message
cat("Data exported successfully to:", output_path, "\n")


# Set the file path (update this with the actual path to your CSV file)
file_path <- "C:/Users/no/no/Desktop/exported_data_jmir.csv"  # Windows
# file_path <- "/Users/YourUsername/Documents/your_file.csv"   # macOS or Linux

# Read the CSV file into a data frame
dt <- read.csv(file_path)

# View the first few rows of the imported data
head(dt)






# Keep needed columns
dt <- dt[,1:4]

# Indent the subgroup if there is a number in the placebo column
#dt$Subgroup <- ifelse(is.na(dt$Placebo), 
#                      dt$Subgroup,
#                      paste0("   ", dt$Subgroup))

# NA to blank or NA will be transformed to carachter.
#dt$Treatment <- ifelse(is.na(dt$Treatment), "", dt$Treatment)
#dt$Placebo <- ifelse(is.na(dt$Placebo), "", dt$Placebo)
dt$se <- (log(dt$hi) - log(dt$est))/1.96

# Add a blank column for the forest plot to display CI.
# Adjust the column width with space, and increase the number of spaces below 
# to have a larger area to draw the CI. 
dt$` ` <- paste(rep(" ", 20), collapse = " ")

# Create a confidence interval column to display
dt$`HR (95% CI)` <- ifelse(is.na(dt$se), "",
                           sprintf("%.2f (%.2f to %.2f)",
                                   dt$est, dt$low, dt$hi))
head(dt)
#>          Subgroup Treatment Placebo      est        low       hi        se
#> 1    All Patients       781     780 1.869694 0.13245636 3.606932 0.3352463
#> 2             Sex                         NA         NA       NA        NA
#> 3            Male       535     548 1.449472 0.06834426 2.830600 0.3414741
#> 4          Female       246     232 2.275120 0.50768005 4.042560 0.2932884
#> 5             Age                         NA         NA       NA        NA
#> 6          <65 yr       297     333 1.509242 0.67029394 2.348190 0.2255292
#>                                                   HR (95% CI)
#> 1                                         1.87 (0.13 to 3.61)
#> 2                                                            
#> 3                                         1.45 (0.07 to 2.83)
#> 4                                         2.28 (0.51 to 4.04)
#> 5                                                            
#> 6                                         1.51 (0.67 to 2.35)
#> 
#> 

            p <- forest(dt[,c(1:4, 8:9)],
                        est = dt$est,
                        lower = dt$low, 
                        upper = dt$hi,
                        sizes = dt$se,
                        ci_column = 4,
                        ref_line = 1,
                        arrow_lab = c("Less Frequent Depression", "More Frequent Depression"),
                        xlim = c(0, 5),
                        ticks_at = c(0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5),
                        footnote = "Adjusted for age, sex, ethnicity, time-to-assessment, diabetes diagnosis, and \n hyperlipidemia diagnosis.")
            
            # Print plot
            plot(p)
